{"version":3,"sources":["Word.js","App.js","reportWebVitals.js","index.js"],"names":["Word","r_word","r_link","r_seq","r_chi","r_pos","r_des","className","style","textAlign","width","marginBottom","marginLeft","background","display","href","target","rel","type","App","props","console","log","state","loading","words","fetch","then","res","json","result","setState","this","id","columns","margin","placeholder","value","map","word","_id","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA8BeA,MA5Bf,YAA6D,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MAUhD,OACI,sBAAKC,UAAU,OAAOC,MAVR,CACdC,UAAW,OACXC,MAAO,OACPC,aAAc,OACdC,WAAY,OACZC,WAAY,qBACZC,QAAS,gBAIT,UACI,sBAAKP,UAAY,OAAjB,UACI,mBAAGQ,KAAMb,EAAQc,OAAO,SAASC,IAAI,aAArC,SACKhB,IACL,8BAAME,GAAa,KAClBC,EACAC,KAEL,oBAAGE,UAAU,cAAb,UAA4BD,EACxB,wBAAQY,KAAK,SAASX,UAAU,uBAAhC,SACI,mBAAGQ,KAAMb,EAAQc,OAAO,SAASC,IAAI,aAArC,sDCyDLE,E,kDA3Eb,WAAYC,GAAQ,IAAD,6BACjBC,QAAQC,IAAI,gBACZ,cAAMF,IACDG,MAAQ,CACXC,SAAS,EACTC,MAAO,IALQ,E,qDASnB,WAAqB,IAAD,OAClBJ,QAAQC,IAAI,SAIZI,MAHiB,2DAIhBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAOL,EAASK,EAATL,MACPJ,QAAQC,IAAIG,GACZ,EAAKM,SAAS,CAACP,SAAQ,EAAOC,e,oBAUlC,WACE,MAAyBO,KAAKT,MAAvBC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAShB,OAAGD,EAEC,8BACE,8CAKF,sBAAKS,GAAG,YAAYzB,MAfD,CACrBE,MAAO,MACPwB,QAAS,IACTC,OAAQ,YACR1B,UAAW,UAWT,UACA,gEACI,uBAAOwB,GAAG,SAASf,KAAK,OAAOkB,YAAY,0DAC3C,uBAAOH,GAAG,SAASf,KAAK,SAASmB,MAAM,iBACvC,uBAAS,uBACT,uBACA,uBAGDZ,EAAMa,KAAI,SAAAC,GACT,OACE,cAAC,EAAD,CAEEtC,OAAQsC,EAAKtC,OACbC,OAAQqC,EAAKrC,OACbC,MAAOoC,EAAKpC,MACZC,MAAOmC,EAAKnC,MACZC,MAAOkC,EAAKlC,MACZC,MAAOiC,EAAKjC,OANPiC,EAAKC,e,GA5DRC,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e44f3c27.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Word({r_word, r_link, r_seq, r_chi, r_pos, r_des}) {\r\n    const itemStyle = {\r\n        textAlign: 'left',\r\n        width: '100%',\r\n        marginBottom: '10px',\r\n        marginLeft: '20px',\r\n        background: 'rgb(236, 233, 236)',\r\n        display: 'inline-block', \r\n    }\r\n\r\n    return (\r\n        <div className=\"item\" style={itemStyle}>\r\n            <div className = \"word\">\r\n                <a href={r_link} target=\"_blank\" rel=\"noreferrer\">\r\n                    {r_word}</a>\r\n                <sup>{r_seq? r_seq:\"\"}</sup>\r\n                {r_chi}\r\n                {r_pos}\r\n            </div>\r\n            <p className=\"description\">{r_des}\r\n                <button type=\"button\" className=\"btn btn-outline-dark\">\r\n                    <a href={r_link} target=\"_blank\" rel=\"noreferrer\">자세히 보기</a>\r\n                </button>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Word; ","import './App.css';\nimport React, {Component} from 'react';\nimport Word from './Word';\n\nclass App extends Component {\n  constructor(props) {\n    console.log('constructor')\n    super(props)\n    this.state = {\n      loading: true,\n      words: []\n    }\n  }\n  //컴포넌트가 생성되었을때 호출이 됨\n  componentDidMount() {\n    console.log('mount')\n    const BASE_URL = 'https://dictionary-search-words.herokuapp.com/api/words'\n\n    //서버에서 데이터 가져오기\n    fetch(BASE_URL)\n    .then(res => res.json())\n    .then(result => {\n      const {words} = result\n      console.log(words)\n      this.setState({loading:false, words})\n    })\n  }\n  // componentDidUpdate(){\n  //   console.log('update')\n  // }\n  // componentWillUnmount(){\n  //   console.log('unmount')\n  // }\n\n  render() {\n    const {loading, words} = this.state\n\n    const containerStyle = {\n      width: '75%',\n      columns: '1',\n      margin: '30px auto',\n      textAlign: 'center',\n    }\n    \n    if(loading) {\n      return(\n        <div>\n          <h1>Loading...</h1>\n        </div>\n      )\n    } else{\n      return(\n        <div id=\"container\" style={containerStyle}>\n        <h1>국어대사전</h1>\n            <input id=\"search\" type=\"text\" placeholder=\"단어를 검색하세요 ...\"></input>\n            <input id=\"submit\" type=\"submit\" value=\"찾기\"></input> \n            <br></br><br></br>\n            <hr></hr>\n            <br></br>\n\n          {/* 오픈 API 데이터 순회 => 컴포넌트로 변환 */}\n          {words.map(word => {\n            return(\n              <Word \n                key={word._id}\n                r_word={word.r_word}\n                r_link={word.r_link}\n                r_seq={word.r_seq}\n                r_chi={word.r_chi}\n                r_pos={word.r_pos}\n                r_des={word.r_des}\n              ></Word>\n            )\n          })}\n        </div>\n      ) \n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}